name: Pull Request Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-check:
    name: PR Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test:run

      - name: Run backend tests
        run: |
          cd backend
          npm run test:run

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: PR Size Check
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const changedFiles = pr.changed_files;
            const additions = pr.additions;
            const deletions = pr.deletions;
            
            console.log(`PR Stats: ${changedFiles} files, +${additions} -${deletions}`);
            
            // Large PR warning
            if (changedFiles > 20 || additions > 500) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '⚠️ This PR is quite large. Consider breaking it into smaller PRs for easier review.'
              });
            }

  pr-comment:
    name: PR Comment
    runs-on: ubuntu-latest
    needs: pr-check
    if: always()
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const checkResult = '${{ needs.pr-check.result }}';
            let message = '';
            
            if (checkResult === 'success') {
              message = '✅ All checks passed! This PR is ready for review.';
            } else {
              message = '❌ Some checks failed. Please review the failed jobs.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
